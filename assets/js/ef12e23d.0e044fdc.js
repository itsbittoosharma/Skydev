"use strict";(self.webpackChunkskydev=self.webpackChunkskydev||[]).push([[7440],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),f=a,h=d["".concat(c,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9870:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={},i=void 0,s={unversionedId:"OOPS/Encapsulation",id:"OOPS/Encapsulation",title:"Encapsulation",description:"What is encapsulation?",source:"@site/docs/OOPS/Encapsulation.md",sourceDirName:"OOPS",slug:"/OOPS/Encapsulation",permalink:"/Skydev/docs/OOPS/Encapsulation",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Destructor",permalink:"/Skydev/docs/OOPS/Destructor"},next:{title:"Inheritence",permalink:"/Skydev/docs/OOPS/Inheritence"}},c={},l=[{value:"What is encapsulation?",id:"what-is-encapsulation",level:2}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"what-is-encapsulation"},"What is encapsulation?"),(0,a.kt)("p",null,"One can visualize Encapsulation as the method of putting everything that is required\nto do the job, inside a capsule and presenting that capsule to the user. What it means\nis that by Encapsulation, all the necessary data and methods are bind together and\nall the unnecessary details are hidden to the normal user. So Encapsulation is the\nprocess of binding data members and methods of a program together to do a specific\njob, without revealing unnecessary details.\nEncapsulation can also be defined in two different ways:\n1) Data hiding: Encapsulation is the process of hiding unwanted information, such as\nrestricting access to any member of an object.\n2) Data binding: Encapsulation is the process of binding the data members and the\nmethods together as a whole, as a class."))}p.isMDXComponent=!0}}]);