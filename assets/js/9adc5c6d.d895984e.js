"use strict";(self.webpackChunkskydev=self.webpackChunkskydev||[]).push([[1969],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>u});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},h=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,h=c(e,["components","mdxType","originalType","parentName"]),p=s(n),u=i,d=p["".concat(l,".").concat(u)]||p[u]||m[u]||a;return n?r.createElement(d,o(o({ref:t},h),{},{components:n})):r.createElement(d,o({ref:t},h))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6240:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={},o=void 0,c={unversionedId:"Object Oriented Programming/Inheritence",id:"Object Oriented Programming/Inheritence",title:"Inheritence",description:"What is meant by Inheritance?",source:"@site/docs/Object Oriented Programming/Inheritence.md",sourceDirName:"Object Oriented Programming",slug:"/Object Oriented Programming/Inheritence",permalink:"/docs/Object Oriented Programming/Inheritence",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Encapsulation",permalink:"/docs/Object Oriented Programming/Encapsulation"},next:{title:"Object",permalink:"/docs/Object Oriented Programming/Object"}},l={},s=[{value:"What is meant by Inheritance?",id:"what-is-meant-by-inheritance",level:2},{value:"Explain Inheritance with an example?",id:"explain-inheritance-with-an-example",level:4},{value:"Are there any limitations of Inheritance?",id:"are-there-any-limitations-of-inheritance",level:4},{value:"What are the various types of inheritance?",id:"what-are-the-various-types-of-inheritance",level:4}],h={toc:s};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"what-is-meant-by-inheritance"},"What is meant by Inheritance?"),(0,i.kt)("p",null,"The term \u201cinheritance\u201d means \u201creceiving some quality or behavior from a parent to\nan offspring.\u201d In object-oriented programming, inheritance is the mechanism by\nwhich an object or class (referred to as a child) is created using the definition of\nanother object or class (referred to as a parent). Inheritance not only helps to keep\nthe implementation simpler but also helps to facilitate code reuse."),(0,i.kt)("h4",{id:"explain-inheritance-with-an-example"},"Explain Inheritance with an example?"),(0,i.kt)("p",null,"Inheritance is one of the major features of object-oriented programming, by which an\nentity inherits some characteristics and behaviors of some other entity and makes\nthem their own. Inheritance helps to improve and facilitate code reuse.\nLet me explain to you with a common example. Let's take three different vehicles - a\ncar, truck, or bus. These three are entirely different from one another with their own\nspecific characteristics and behavior. But. in all three, you will find some common\nelements, like steering wheel, accelerator, clutch, brakes, etc. Though these\nelements are used in different vehicles, still they have their own features which are\ncommon among all vehicles. This is achieved with inheritance. The car, the truck, and\nthe bus have all inherited the features like steering wheel, accelerator, clutch, brakes,\netc, and used them as their own. Due to this, they did not have to create these\ncomponents from scratch, thereby facilitating code reuse."),(0,i.kt)("h4",{id:"are-there-any-limitations-of-inheritance"},"Are there any limitations of Inheritance?"),(0,i.kt)("p",null,"Yes, with more powers comes more complications. Inheritance is a very powerful\nfeature in OOPs, but it has some limitations too. Inheritance needs more time to\nprocess, as it needs to navigate through multiple classes for its implementation. Also,\nthe classes involved in Inheritance - the base class and the child class, are very tightly\ncoupled together. So if one needs to make some changes, they might need to do\nnested changes in both classes. Inheritance might be complex for implementation, as\nwell. So if not correctly implemented, this might lead to unexpected errors or\nincorrect outputs."),(0,i.kt)("h4",{id:"what-are-the-various-types-of-inheritance"},"What are the various types of inheritance?"),(0,i.kt)("p",null,"The various types of inheritance include:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Single inheritance"),(0,i.kt)("li",{parentName:"ol"},"Multiple inheritances"),(0,i.kt)("li",{parentName:"ol"},"Multi-level inheritance"),(0,i.kt)("li",{parentName:"ol"},"Hierarchical inheritance"),(0,i.kt)("li",{parentName:"ol"},"Hybrid inheritance")))}m.isMDXComponent=!0}}]);